.tabs {
    $this: &;

    display: flex;
    max-width: 100%;

    &_horizontal {
        flex-direction: column;

        #{ $this }__wrapper {
            overflow: hidden;
            white-space: nowrap;
            margin: calc(-1 * var(--guit-ref-spacing-4xsmall));
        }

        #{ $this }__list {
            overflow-x: auto;
            overflow-y: hidden;
        }

        &#{ $this }_line {
            #{ $this }__button {
                transition: transform 0.1s linear;

                &_selected:not(&#{ $this }__button_error) {
                    box-shadow: 0 calc(-1 * var(--guit-ref-border-width-thick)) 0 0
                        var(--guit-sem-color-border-selected) inset;
                }

                &_error {
                    box-shadow: 0 calc(-1 * var(--guit-ref-border-width-thin)) 0 0 var(--guit-sem-color-border-error)
                        inset;
                }
            }
        }

        &#{ $this }_contained {
            #{ $this }__button {
                &_selected:not(&#{ $this }__button_error) {
                    box-shadow:
                        0 var(--guit-ref-border-width-thick) 0 0 var(--guit-sem-color-border-selected) inset,
                        var(--guit-ref-border-width-thick) 0 0 0 var(--guit-sem-color-border-selected) inset,
                        calc(-1 * var(--guit-ref-border-width-thick)) 0 0 0 var(--guit-sem-color-border-selected) inset;
                }

                &_error {
                    box-shadow: 0 calc(-1 * var(--guit-ref-border-width-thin)) 0 0 var(--guit-sem-color-border-error)
                        inset;
                }
            }
        }

        #{ $this }__button {
            &_large {
                border-top-left-radius: var(--guit-ref-radius-2xsmall);
                border-top-right-radius: var(--guit-ref-radius-2xsmall);
            }

            &_medium {
                border-top-left-radius: var(--guit-ref-radius-3xsmall);
                border-top-right-radius: var(--guit-ref-radius-3xsmall);
            }

            &:not(&#{ $this }__button_selected):not(&#{ $this }__button_error) {
                box-shadow: 0 calc(-1 * var(--guit-ref-border-width-thin)) 0 0 var(--guit-sem-color-border-neutral-2)
                    inset;
            }
        }
    }

    &_vertical {
        height: 100%;
        overflow: hidden;

        #{ $this }__nav {
            overflow-x: hidden;
            overflow-y: auto;
        }

        #{ $this }__nav,
        #{ $this }__list {
            flex-direction: column;
        }

        #{ $this }__button {
            [dir="ltr"] & {
                &_large {
                    border-top-left-radius: var(--guit-ref-radius-2xsmall);
                    border-bottom-left-radius: var(--guit-ref-radius-2xsmall);
                }

                &_medium {
                    border-top-left-radius: var(--guit-ref-radius-3xsmall);
                    border-bottom-left-radius: var(--guit-ref-radius-3xsmall);
                }

                &:not(&#{ $this }__button_selected):not(&#{ $this }__button_error) {
                    box-shadow: calc(-1 * var(--guit-ref-border-width-thin)) 0 0 0
                        var(--guit-sem-color-border-neutral-2) inset;
                }

                &_selected {
                    box-shadow: calc(-1 * var(--guit-ref-border-width-thick)) 0 0 0
                        var(--guit-sem-color-border-selected) inset;
                }

                &_error {
                    box-shadow: calc(-1 * var(--guit-ref-border-width-thin)) 0 0 0 var(--guit-sem-color-border-error)
                        inset;
                }
            }

            [dir="rtl"] & {
                &_large {
                    border-top-right-radius: var(--guit-ref-radius-2xsmall);
                    border-bottom-right-radius: var(--guit-ref-radius-2xsmall);
                }

                &_medium {
                    border-top-right-radius: var(--guit-ref-radius-3xsmall);
                    border-bottom-right-radius: var(--guit-ref-radius-3xsmall);
                }

                &:not(&#{ $this }__button_selected):not(&#{ $this }__button_error) {
                    box-shadow: var(--guit-ref-border-width-thin) 0 0 0 var(--guit-sem-color-border-neutral-2) inset;
                }

                &_selected {
                    box-shadow: var(--guit-ref-border-width-thick) 0 0 0 var(--guit-sem-color-border-selected) inset;
                }

                &_error {
                    box-shadow: var(--guit-ref-border-width-thin) 0 0 0 var(--guit-sem-color-border-error) inset;
                }
            }
        }
    }

    &__nav {
        display: flex;
        align-items: center;
        flex: 0 0 auto;
        background-color: var(--guit-sem-color-background-neutral-1);
        max-width: 100%;

        &_button {
            flex: 0 0 auto;
            box-shadow: 0 calc(-1 * var(--guit-ref-border-width-thin)) 0 0 var(--guit-sem-color-border-neutral-2) inset;

            [dir="rtl"] & {
                rotate: 180deg;
            }
        }
    }

    &__wrapper {
        display: flex;
        flex: 1;
    }

    &__list {
        display: flex;
        flex: 1;
        box-sizing: border-box;
        padding: var(--guit-ref-spacing-4xsmall);
        scroll-behavior: smooth;

        /* Hide scrollbar for Chrome, Safari and Opera */
        &::-webkit-scrollbar {
            display: none;
        }

        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
    }

    &__button {
        $that: &;

        display: flex;
        align-items: center;
        justify-content: flex-end;
        column-gap: var(--guit-ref-spacing-xsmall);
        background-color: var(--guit-sem-color-background-neutral-1);

        &_large {
            height: var(--guit-sem-dimension-height-large);
            padding-top: var(--guit-ref-spacing-xsmall);
            padding-bottom: var(--guit-ref-spacing-xsmall);

            &#{ $that }_textOnly:not(&#{ $that }_error) {
                padding-inline-start: var(--guit-ref-spacing-large);
                padding-inline-end: var(--guit-ref-spacing-large);
            }
            &#{ $that }_icon:not(&#{ $that }_error) {
                padding-inline-start: var(--guit-ref-spacing-medium);
                padding-inline-end: var(--guit-ref-spacing-large);
            }
            &#{ $that }_iconOnly {
                padding-inline-start: var(--guit-ref-spacing-medium);
                padding-inline-end: var(--guit-ref-spacing-medium);
            }
            &#{ $that }_error {
                padding-inline-start: var(--guit-ref-spacing-medium);
                padding-inline-end: var(--guit-ref-spacing-medium);
            }
        }

        &_medium {
            height: var(--guit-sem-dimension-height-medium);
            padding-top: var(--guit-ref-spacing-3xsmall);
            padding-bottom: var(--guit-ref-spacing-3xsmall);

            &#{ $that }_textOnly:not(&#{ $that }_error) {
                padding-inline-start: var(--guit-ref-spacing-medium);
                padding-inline-end: var(--guit-ref-spacing-medium);
            }
            &#{ $that }_icon:not(&#{ $that }_error) {
                padding-inline-start: var(--guit-ref-spacing-xsmall);
                padding-inline-end: var(--guit-ref-spacing-medium);
            }
            &#{ $that }_iconOnly {
                padding-inline-start: var(--guit-ref-spacing-xsmall);
                padding-inline-end: var(--guit-ref-spacing-xsmall);
            }
            &#{ $that }_error {
                padding-inline-start: var(--guit-ref-spacing-xsmall);
                padding-inline-end: var(--guit-ref-spacing-xsmall);
            }
        }

        &_text {
            font-family: var(--guit-sem-font-label-medium-default-semibold-font-family), sans-serif;
            font-weight: var(--guit-sem-font-label-medium-default-semibold-font-weight);
            font-size: var(--guit-sem-font-label-medium-default-semibold-font-size);
            line-height: var(--guit-sem-font-label-medium-default-semibold-line-height);
        }

        // state: rest
        &:not(&#{ $that }_selected):not(&#{ $that }_disabled) {
            cursor: pointer;
            #{ $that }_icon {
                color: var(--guit-sem-color-foreground-neutral-2);
            }
        }

        &:not(&#{ $that }_selected):not(&#{ $that }_disabled):not(&#{ $that }_error) {
            #{ $that }_text {
                color: var(--guit-sem-color-foreground-neutral-2);
            }
        }

        // state: hover
        &:hover {
            background-color: var(--guit-sem-color-background-neutral-1-hover);
        }

        // state: pressed
        &:active {
            background-color: var(--guit-sem-color-background-neutral-1-pressed);
        }

        // state: focused
        &:focus-visible {
            z-index: 2;
        }

        // state: selected
        &_selected {
            cursor: default;

            #{ $that }_icon,
            #{ $that }_text {
                color: var(--guit-sem-color-border-selected);
            }
        }

        // state: error
        &_error {
            #{ $that }_iconError,
            #{ $that }_text {
                color: var(--guit-sem-color-foreground-error);
            }
        }

        // state: disabled
        &_disabled {
            pointer-events: none;

            #{ $that }_icon,
            #{ $that }_text {
                color: var(--guit-sem-color-foreground-disabled);
            }
        }

        // slot styles
        &_slot {
            width: 2.4rem;
            height: 2.4rem;

            // todo: remove this styles after implementation
            background-color: #f4e1ec;
            border: 0.1rem solid #a60063;
        }
    }

    &__stage {
        flex: 1;

        // todo: remove this styles after stage component implementation
        padding: var(--guit-ref-spacing-xlarge);
        background-color: var(--guit-sem-color-background-neutral-3);
    }
}
